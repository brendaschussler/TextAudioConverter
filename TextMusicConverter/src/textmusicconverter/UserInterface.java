/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package textmusicconverter;

/**
 *
 * @author brendaschussler
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form UserInterface
     */
    public UserInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lTitle = new javax.swing.JLabel();
        lSubtitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tTextArea = new javax.swing.JTextArea();
        btnImportFile = new javax.swing.JButton();
        lInitialBpm = new javax.swing.JLabel();
        lInitialInstrument = new javax.swing.JLabel();
        cboxBpm = new javax.swing.JComboBox<>();
        cboxInstrument = new javax.swing.JComboBox<>();
        btnGenerateMusic = new javax.swing.JButton();
        btnPlayMusic = new javax.swing.JButton();
        btnDownloadMusic = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lTitle.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lTitle.setForeground(new java.awt.Color(0, 102, 153));
        lTitle.setText("Conversor de Texto em Música");

        lSubtitle.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        lSubtitle.setForeground(new java.awt.Color(0, 102, 102));
        lSubtitle.setText("Insira abaixo o texto que deseja converter (no máximo 1000 caracteres)");

        tTextArea.setColumns(20);
        tTextArea.setRows(5);
        jScrollPane1.setViewportView(tTextArea);

        btnImportFile.setBackground(new java.awt.Color(0, 102, 102));
        btnImportFile.setForeground(new java.awt.Color(255, 255, 255));
        btnImportFile.setText("Importar arquivo de texto ");

        lInitialBpm.setFont(new java.awt.Font("Liberation Sans", 3, 16)); // NOI18N
        lInitialBpm.setText("BPM inicial ");

        lInitialInstrument.setFont(new java.awt.Font("Liberation Sans", 3, 16)); // NOI18N
        lInitialInstrument.setText("Instrumento inicial ");

        cboxBpm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboxInstrument.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGenerateMusic.setBackground(new java.awt.Color(0, 102, 102));
        btnGenerateMusic.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        btnGenerateMusic.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerateMusic.setText("Gerar música");

        btnPlayMusic.setBackground(new java.awt.Color(0, 102, 102));
        btnPlayMusic.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        btnPlayMusic.setForeground(new java.awt.Color(255, 255, 255));
        btnPlayMusic.setText("Reproduzir música");

        btnDownloadMusic.setBackground(new java.awt.Color(0, 102, 102));
        btnDownloadMusic.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnDownloadMusic.setForeground(new java.awt.Color(255, 255, 255));
        btnDownloadMusic.setText("Fazer download da música");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(lTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGenerateMusic)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lSubtitle)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnImportFile, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lInitialInstrument)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboxInstrument, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lInitialBpm)
                                        .addGap(98, 98, 98)
                                        .addComponent(cboxBpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnPlayMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(194, 194, 194))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDownloadMusic)
                        .addGap(315, 315, 315))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lTitle)
                .addGap(18, 18, 18)
                .addComponent(lSubtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImportFile, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lInitialBpm)
                    .addComponent(cboxBpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lInitialInstrument)
                    .addComponent(cboxInstrument, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerateMusic)
                .addGap(29, 29, 29)
                .addComponent(btnPlayMusic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDownloadMusic)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDownloadMusic;
    private javax.swing.JButton btnGenerateMusic;
    private javax.swing.JButton btnImportFile;
    private javax.swing.JButton btnPlayMusic;
    private javax.swing.JComboBox<String> cboxBpm;
    private javax.swing.JComboBox<String> cboxInstrument;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lInitialBpm;
    private javax.swing.JLabel lInitialInstrument;
    private javax.swing.JLabel lSubtitle;
    private javax.swing.JLabel lTitle;
    private javax.swing.JTextArea tTextArea;
    // End of variables declaration//GEN-END:variables
}
